{"name":"Prelude","tagline":"Prelude is a starter theme, gulp stack and structure for crafting custom Wordpress themes.","body":"# Prelude #\r\n\r\nPrelude is a starter theme, gulp stack and structure for crafting custom Wordpress themes.\r\n\r\n## Features ##\r\n\r\n### Gulp Tasks ###\r\nPrelude uses Gulp to: \r\n* Compile & minify Sass/CSS\r\n* Auto-prefix your Sass/CSS\r\n* Minify and concatenate JavaScript/jQuery\r\n* Compress PNG & JPGs\r\n* Create a theme distribution folder for local testing\r\n* Package a theme for upload to Wordpress\r\n\r\n### Wordpress Functions ###\r\nPrelude has some nifty features built into `functions.php` to make developing a custom Wordpress theme a little easier.\r\n* Shortcode Maker - allows for easy creation of custom shortcodes. Useful for buttons or custom media embeds.\r\n* Defer jQuery Parsing using the HTML5 defer property\r\n* Customize Wordpress Admin Login / Admin Footer Text\r\n* Customized Read More Links\r\n* Other various improvements to default Wordpress functions that are too long and/or small to list here\r\n\r\n## Getting Started ##\r\nPrelude requires that you have Node and npm installed on your machine. If you need help with that, please visit the [npm documentation](https://docs.npmjs.com/getting-started/installing-node).\r\n\r\n1. Clone this repository to your machine, or download the .zip and place its contents in your project folder\r\n2. Install from the project folder using `npm install`\r\n3. Using the `theme` variable found in `gulpfile.js` name your theme (Don't forget to also fill out the theme information found in `style.css` in the root of `src/`)\r\n4. Run the default Gulp task while editing files using `gulp` or `gulp default`\r\n\r\nWhen running the default gulp task, a theme folder will be created based on the `theme` variable. You can use this folder as your theme when running locally. When you're ready to package your theme you can run `gulp package` to create a zip folder of your production theme.\r\n\r\n## File Structure ##\r\nYou can modify the file structure however you like as long as it is also updated in `gulpfile.js`. Of course your project files may vary. By default it is as follows:\r\n\r\n```\r\n.\r\n├── README.md\r\n├── gulpfile.js\r\n├── package.json\r\n└── src\r\n    ├── 404.php\r\n    ├── archive.php\r\n    ├── comments.php\r\n    ├── footer.php\r\n    ├── functions.php\r\n    ├── header.php\r\n    ├── images\r\n    │\t├── src\r\n    ├── inc\r\n    │   ├── meta.php\r\n    │   └── nav.php\r\n    ├── index.php\r\n    ├── page.php\r\n    ├── screenshot.png\r\n    ├── scss\r\n    │   ├── components\r\n    │   │   ├── _footer.scss\r\n    │   │   ├── _header.scss\r\n    │   ├── global\r\n    │   │   └── _global.scss\r\n    │   │   └── _typography.scss\r\n    │   ├── page-templates\r\n    │   ├── settings\r\n    │   │   └── _variables.scss\r\n    │   ├── theme.scss\r\n    │   └── vendor\r\n    ├── search.php\r\n    ├── searchform.php\r\n    ├── shortcode_maker.php\r\n    ├── shortcodes\r\n    │   ├── _instructions.php\r\n    │   ├── col_end.php\r\n    │   ├── col_start.instructions\r\n    │   ├── col_start.php\r\n    │   ├── fluidvideo.php\r\n    │   ├── fluidvideo.instructions\r\n    │   ├── row_end.php\r\n    │   └── row_start.php\r\n    ├── sidebar.php\r\n    ├── single.php\r\n    └── style.css\r\n```\r\n\r\nAs mentioned in the getting started section, when the default Gulp task is ran, a theme folder will be created in the project root folder. Default compile paths are as follows:\r\n\r\n* `src/images/src` compresses images and moves them up a level to `images`\r\n* `src/scss/theme.scss` compiles to `src/css/theme.css`\r\n* `src/css/` all css files are minified in place, with a suffix of `.min.css`. Files that are already minified will be ignored.  \r\n* `src/js/*.js` is concatenated and added to `global.js` then minified to `global.min.js`\r\n\r\n## List Of Gulp Tasks ##\r\nThere are 8 Gulp tasks available by default.\r\n\r\n* `gulp lint` - a Javascript helper to find and catch errors\r\n* `gulp sass` - compiles sass files and auto-prefixes the styles\r\n* `gulp minify-css` - minifies css files but first runs `sass`.\r\n* `gulp styles` - runs `sass` and then `minify-css`, in that order.\r\n* `gulp scripts` - concatenates and minifies JS files\r\n* `gulp images` - compresses images\r\n* `gulp copy` - copies files from `src/` to the theme folder as named in `gulpfile.js` (This task only copies production files and leaves behind uncompiled/uncompressed files)\r\n* `gulp watch` - watches folder and files for changes and runs tasks based on what was updated\r\n* `gulp package` - creates a production ready `.zip` file based on your production theme folder\r\n\r\nRunning `gulp` or `gulp default` will run all tasks except `package`.\r\n\r\n## Bugs, Contributions & Questions ##\r\nWe are always looking for ways to improve. If you find a bug, have a question, or wish to add a contribution please open an issue.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}